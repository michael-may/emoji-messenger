{"version":3,"file":"src_app_pages_conversation-detail_conversation-detail_module_ts.js","mappings":"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","sources":["./src/app/pages/conversation-detail/conversation-detail.module.ts","./src/app/pages/conversation-detail/conversation-detail.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nimport { ConversationDetailPage } from './conversation-detail.page';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule.forChild([\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tcomponent: ConversationDetailPage\r\n\t\t\t}\r\n\t\t]),\r\n\t\tFormsModule,\r\n\t\tSharedModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tConversationDetailPage\r\n\t]\r\n})\r\nexport class ConversationDetailPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { IonRouterOutlet, ModalController } from '@ionic/angular';\n\nimport { Conversation, ConversationService, Message, MessageType } from '../../_core/services/conversation.service';\nimport { EncryptionKey, KeyService } from '../../_core/services/key.service';\nimport { Contact, ContactService } from '../../_core/services/contact.service';\n\nimport { MessageAddModal } from '../../shared/modals/message-add/message-add.modal';\nimport { MessageShareModal } from '../../shared/modals/message-share/message-share.modal';\nimport { MessageImportModal } from '../../shared/modals/message-import/message-import.modal';\n\nimport { Crypto } from '../../_core/utils/crypto.utils';\nimport { ImageUtils } from '../../_core/utils/image.utils';\n\n@Component({\n\tselector: 'app-conversation-detail',\n\ttemplateUrl: 'conversation-detail.page.html',\n\tstyleUrls: ['conversation-detail.page.scss'],\n})\nexport class ConversationDetailPage implements OnInit {\n\n\tpublic contact$: Observable<Contact>;\n\tpublic key$: Observable<EncryptionKey>;\n\tpublic conversation$: Observable<Conversation>;\n\n\tpublic id: string;\n\tpublic name: string = '';\n\tpublic contact: Contact;\n\tpublic key: EncryptionKey;\n\n\tpublic get MessageType() {\n\t\treturn MessageType;\n\t}\n\n\tconstructor(\n\t\tprivate readonly route: ActivatedRoute,\n\t\tprivate readonly keyService: KeyService,\n\t\tprivate readonly conversationService: ConversationService,\n\t\tprivate readonly contactService: ContactService,\n\t\tprivate readonly modalController: ModalController,\n\t\tprivate readonly routerOutlet: IonRouterOutlet\n\t) {}\n\n\tngOnInit() {\n\t\tthis.id = this.route.snapshot.paramMap.get('id');\n\t\tthis.conversation$ = this.conversationService\n\t\t\t.getConversation(this.id)\n\t\t\t.pipe(\n\t\t\t\ttap(c => {\n\t\t\t\t\tif(!c) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.name = c.name,\n\t\t\t\t\tthis.loadContact(c.toKeyId);\n\t\t\t\t\tthis.loadKey(c.fromKeyId);\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tngOnDestroy() {\n\n\t}\n\n\tprivate loadContact(id: string) {\n\t\tthis.contact$ = this.contactService\n\t\t\t.getContact(id)\n\t\t\t.pipe(\n\t\t\t\ttap(c => this.contact = c )\n\t\t\t);\n\t}\n\n\tprivate loadKey(id: string) {\n\t\tthis.key$ = this.keyService\n\t\t\t.getkey(id)\n\t\t\t.pipe(\n\t\t\t\ttap(k => this.key = k)\n\t\t\t);\n\t}\n\n\tpublic async createMessage() {\n\t\tconst modal: HTMLIonModalElement = await this.modalController\n\t\t\t.create({\n\t\t\t\tcomponent: MessageAddModal,\n\t\t\t\tswipeToClose: true,\n\t\t\t\tpresentingElement: this.routerOutlet.nativeEl,\n\t\t\t\tcomponentProps: {\n\t\t\t\t\tfromName: this.key?.name,\n\t\t\t\t\ttoName: this.contact?.name,\n\t\t\t\t\ttoKey: this.contact?.publicKeyImported\n\t\t\t\t}\n\t\t\t});\n\n\t\tawait modal.present();\n\n\t\tconst result = await modal.onDidDismiss();\n\n\t\tif(result?.data?.image) {\n\t\t\tthis.conversationService\n\t\t\t\t.addMessage(\n\t\t\t\t\tthis.id,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: MessageType.Outgoing,\n\t\t\t\t\t\timageData: result.data.image,\n\t\t\t\t\t\temoji: result.data?.emoji,\n\t\t\t\t\t\tbackgroundColor: result.data?.backgroundColor,\n\t\t\t\t\t\tdataRaw: result.data?.encrypted\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t}\n\t}\n\n\tpublic async importMessage() {\n\t\tconst modal: HTMLIonModalElement = await this.modalController\n\t\t\t.create({\n\t\t\t\tcomponent: MessageImportModal,\n\t\t\t\tswipeToClose: true,\n\t\t\t\tpresentingElement: this.routerOutlet.nativeEl,\n\t\t\t\tcomponentProps: {\n\t\t\t\t\tfromName: this.contact?.name,\n\t\t\t\t\ttoName: this.key?.name\n\t\t\t\t}\n\t\t\t});\n\n\t\tawait modal.present();\n\n\t\tconst result = await modal.onDidDismiss();\n\n\t\tif(result?.data?.image) {\n\t\t\tthis.conversationService\n\t\t\t\t.addMessage(\n\t\t\t\t\tthis.id,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: MessageType.Incoming,\n\t\t\t\t\t\timageData: result.data.image\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t}\n\t}\n\n\tpublic async decodeMessage(message: Message) {\n\t\tif(!this.contact || !this.key) {\n\t\t\treturn;\n\t\t}\n\t\tif(message.type === MessageType.Outgoing) {\n\t\t\tconst modal: HTMLIonModalElement = await this.modalController\n\t\t\t\t.create({\n\t\t\t\t\tcomponent: MessageShareModal,\n\t\t\t\t\tswipeToClose: true,\n\t\t\t\t\tpresentingElement: this.routerOutlet.nativeEl,\n\t\t\t\t\tcomponentProps: {\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tconversationId: this.id\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tawait modal.present();\n\n\t\t\tawait modal.onDidDismiss();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst blob = await ImageUtils.read(message.imageData)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn null;\n\t\t\t});\n\n\t\tif(this.key.passwordProtected && !this.key.unlocked) {\n\t\t\tconst password = window.prompt('Enter the password for this key.');\n\t\t\tlet result: EncryptionKey = await this.keyService\n\t\t\t\t.unlockKey(this.key.id, password)\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\n\t\t\tif(!result) {\n\t\t\t\talert(`Couldn't unlock key with the given password.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.key = result;\n\t\t}\n\n\t\tlet result = await this.decrypt(blob, this.key.keyPair.privateKey)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn null;\n\t\t\t});\n\n\t\tif(result) {\n\t\t\talert(result);\n\t\t}\n\n\t\t// let result = await this.decrypt(message.data, this.key.keyPair.privateKey, blob)\n\t\t// \t.catch(err => {\n\t\t// \t\tconsole.log(err);\n\t\t// \t\treturn null;\n\t\t// \t});\n\n\t\t// if(result) {\n\t\t// \talert(result);\n\t\t// }\n\t\t\n\t}\n\n\tprivate async decrypt(image: number[], privateKey: CryptoKey) {\n\t\tlet unpadded = [];\n\n\t\tconst minPx = 512;\n\t\tconst nextPow = Math.max(1 << (32 - Math.clz32(Math.ceil(Math.sqrt(minPx)))), 128);\n\t\t//const density = Math.floor((minPx / (nextPow * nextPow)) * 100);\n\t\tconst density = Math.floor((nextPow * nextPow) / minPx);\n\n\t\tfor(let i = 0; i < minPx; i++) {\n\t\t\tunpadded.push(image[((i * density) * 4) + 3]);\n\t\t}\n\n\t\t// console.log('-------UNPADDED--------');\n\t\t// console.log(unpadded);\n\t\t// console.log('-------/UNPADDED--------');\n\n\t\tconst decoded = await Crypto.decrypt(new Uint8Array(unpadded).buffer, privateKey)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\treturn decoded;\n\t}\n\n\tpublic async deleteMessage(id: string) {\n\t\tthis.conversationService\n\t\t\t.deleteConversation(id);\n\t}\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}